#!/usr/bin/env python

import subprocess
import platform
from urllib2 import Request, urlopen, URLError, HTTPError
import json
import os, sys, Foundation
import re
import string
import shlex
import shutil
import math


##this is the user that we'll be testing for - put your admin user here
theurl = 'http://namer.grahamgilbert.com/checkin/'
pid = str(os.getpid())
pidfile = "/tmp/checkin.pid"
#get the OS version
#version = platform.mac_ver()[0]
#osver = version[0:4]

the_command = "ioreg -c \"IOPlatformExpertDevice\" | awk -F '\"' '/IOPlatformSerialNumber/ {print $4}'"

pid = str(os.getpid())
pidfile = "/tmp/checkin.pid"
if os.path.isfile(pidfile):
    print "%s already exists, exiting" % pidfile
    sys.exit()
else:
    file(pidfile, 'w').write(pid)
serial = subprocess.Popen(the_command,shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE).communicate()[0]
serial = re.sub(r'\s', '', serial)
output = theurl + serial

req = Request(output)
try:
    response = urlopen(req)
except URLError, e:
    if hasattr(e, 'reason'):
        print 'We failed to reach a server.'
        print 'Reason: ', e.reason
        os.unlink(pidfile)
    elif hasattr(e, 'code'):
        print 'The server couldn\'t fulfill the request'
        print 'Error code: ', e.code
        os.unlink(pidfile)
else:
    #got the data from the server, time to get to work!

    data = response.read()
    data = json.loads(data)
    name = data['name']
    prefix = data['prefix']
    domain = data['domain']
    length = data['length']
    
    if name:
        if prefix:
            #is a prefix set? if so, we need to pad the zeroes
            name = name.zfill(length)
        #the hostname must be set
        #if there's a prefix, add that to the name
        #set the local hostname
        if prefix:
            localname = prefix.replace(' ', '-') + "-" + name.replace(' ', '-')
        else:
            localname = name.replace(' ', '-')

        localname=re.sub("[^0-9a-zA-Z\-]","",localname)
        theprocess = "scutil --set LocalHostName" + " " +localname
        p = subprocess.Popen(theprocess,shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE).communicate()[0]
        #set the bonjour name
        if prefix:
            theprocess = "scutil --set ComputerName" + " \"" + prefix  + " " +name + "\""
        else:
            theprocess = "scutil --set ComputerName" + " \"" +name + "\""
        p = subprocess.Popen(theprocess,shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE).communicate()[0]
        
        ##if a domain is set, set the full hostname
        if domain:
            theprocess = "scutil --set HostName" + " " +localname+"."+domain
            p = subprocess.Popen(theprocess,shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE).communicate()[0]
        os.unlink(pidfile)